# Homepage
GET     /                   controllers.SNZTSController.index
GET     /v1/docs            controllers.SNZTSController.docs

# Data service endpoints
GET     /v1/hello           controllers.HelloController.get(name: Option[String])
GET     /v1/limit           controllers.SNZTSController.getLimit
GET     /v1/subjects        controllers.SNZTSController.getSubjects(format: Option[models.Format], subjectCode: Option[String], subjectKeyword: List[String])
GET     /v1/families        controllers.SNZTSController.getFamilies(format: Option[models.Format], subjectCode: Option[String], familyCode: Option[String], familyNbr: Option[Int], subjectKeyword: List[String], familyKeyword: List[String])
GET     /v1/info            controllers.SNZTSController.getInfo(format: Option[models.Format], subjectCode: List[String], familyCode: List[String], familyNbr: List[Int], seriesCode: List[String], subjectKeyword: List[String], familyKeyword: List[String], seriesKeyword: List[String], interval: Option[Int], offset: Option[Int], limit: Option[Int], drop: Option[Int])
GET     /v1/count           controllers.SNZTSController.getCount(format: Option[models.Format], subjectCode: List[String], familyCode: List[String], familyNbr: List[Int], seriesCode: List[String], subjectKeyword: List[String], familyKeyword: List[String], seriesKeyword: List[String], interval: Option[Int], offset: Option[Int]) 
GET     /v1/series          controllers.SNZTSController.getSeries(format: Option[models.Format], seriesCode: List[String], start: Option[String], end: Option[String], head: Option[Int], tail: Option[Int], title: Option[String])
GET     /v1/dataset         controllers.SNZTSController.getDataset(format: Option[models.Format], subjectCode: List[String], familyCode: List[String], familyNbr: List[Int], seriesCode: List[String], subjectKeyword: List[String], familyKeyword: List[String], seriesKeyword: List[String], interval: Option[Int], offset: Option[Int], limit: Option[Int], drop: Option[Int], head: Option[Int], tail: Option[Int]) 

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file       controllers.Assets.versioned(path="/public", file: Asset)